[{"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\index.js":"1","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\App.js":"2","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\AudioPlayer\\AudioPlayer.js":"3","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\Playlist\\Playlist.js":"4","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\SearchBar\\SearchBar.js":"5","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\apis\\Search.js":"6","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Assets\\playlist_reducer.js":"7","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\GenreList\\GenreList.js":"8","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\GenreList\\Grid2.js":"9"},{"size":313,"mtime":1622392828824,"results":"10","hashOfConfig":"11"},{"size":1107,"mtime":1625053487381,"results":"12","hashOfConfig":"11"},{"size":6255,"mtime":1623486505559,"results":"13","hashOfConfig":"11"},{"size":2252,"mtime":1624948501589,"results":"14","hashOfConfig":"11"},{"size":4927,"mtime":1625053453358,"results":"15","hashOfConfig":"11"},{"size":609,"mtime":1623486505561,"results":"16","hashOfConfig":"11"},{"size":14317,"mtime":1624948501584,"results":"17","hashOfConfig":"11"},{"size":2590,"mtime":1625104575338,"results":"18","hashOfConfig":"11"},{"size":2218,"mtime":1625104554033,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1e4fbu5",{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\index.js",["44"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Route>\r\n      <App/>\r\n    </Route>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);",["45","46"],"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\App.js",["47","48","49","50"],"import './App.css';\r\nimport SearchBar from './Components/SearchBar/SearchBar'\r\nimport { Grid } from '@material-ui/core';\r\nimport Playlist from './Components/Playlist/Playlist'\r\nimport AudioPlayer from './Components/AudioPlayer/AudioPlayer'\r\nimport react, {useState} from 'react'\r\nimport GenreList from './GenreList/GenreList';\r\nimport AdvancedGridList from './GenreList/Grid2';\r\n\r\nfunction App() {\r\n  const data = {\r\n    musicList:[],\r\n  };\r\n  return (\r\n    <div style={{minWidth:'500px',minHeight:'500px',flexGrow:'1'}}>\r\n      <Grid container direction=\"column\" style={{padding:'10px',height:'100vh'}} justify=\"space-between\" >\r\n          <Grid item style={{position:'relative', left:'0px', top:'0px'}}><SearchBar data={data}/></Grid>\r\n          {/* <Grid item style={{position:'relative', left:'0px', top:'3px'}}><GenreList /></Grid> */}\r\n          <Grid item style={{position:'relative', left:'0px', top:'3px'}}><Playlist data={data}/></Grid>\r\n          <Grid item style={{position:'relative', left:'0px', bottom:'0px'}}><AudioPlayer/></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\AudioPlayer\\AudioPlayer.js",["51","52","53","54","55","56","57","58","59","60","61","62"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport PlayCircleOn from '@material-ui/icons/PlayCircleOutline'\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport PlayCircleOff from '@material-ui/icons/PauseCircleOutline'\r\nimport { Button, Grid, IconButton, Slider, withStyles } from '@material-ui/core'\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext'\r\nimport music1 from '../../Music/vaaste.mp3'\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp'\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff'\r\nimport { VolumeDown } from '@material-ui/icons';\r\n\r\nfunction AudioPlayer({music}) {\r\n  // const [{id, name, author_name, img, musicName}, setCurrTrack] = useState(music);\r\n  const [isRepeatClicked, setRepeatClick] = useState(false);\r\n  const [isPrevClicked, setPrevClicked] = useState(false);\r\n  const [isNextClicked, setNextClicked] = useState(false);\r\n  const [isPlaying, setPlayPauseClicked] = useState(false);\r\n  const [isVolumeClicked, setVolumeClicked] = useState(false);\r\n  const [volume, setVolume] = useState(50);\r\n  const [seekTime, setSeekTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [currTime, setCurrTime] = useState(0);\r\n  const [bannerToggle,setBannerToggle] = useState(false);\r\n  const pointer = { cursor: \"pointer\"};\r\n    const OnClickPlayAudioHandler = () =>{\r\n        setPlayPauseClicked(!isPlaying)\r\n    }\r\n    const OnClickPreviousAudioHandler = () =>{\r\n        setPlayPauseClicked(!isPlaying)\r\n    }\r\n    const OnClickNextAudioHandler = () =>{\r\n        setPlayPauseClicked(!isPlaying)\r\n    }\r\n\r\n\r\n    const audioElement = useRef();\r\n    const handleSeekChange = (event, newValue) => {\r\n      audioElement.current.currentTime =(newValue*duration)/100;\r\n      setSeekTime(newValue)\r\n  };\r\n  const handleVolumeChange = (event, newValue) => {\r\n      setVolume(newValue);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setCurrTrack(music);\r\n  // }, [music]);\r\n  \r\n  \r\n  useEffect(() => {\r\n    setSeekTime((currTime) / (duration / 100))\r\n  }, [currTime, duration]);\r\n  \r\n  \r\n  \r\n  useEffect(()=>{\r\n    audioElement.current.onended = ()=> {\r\n        setNextClicked(true);\r\n    };\r\n  })\r\n\r\n  const handleVolume = () =>{\r\n    setVolumeClicked(!isVolumeClicked)\r\n  }\r\n  \r\n  function formatTime(secs) {\r\n    const t = new Date(1970, 0, 1);\r\n    t.setSeconds(secs);\r\n    let s = t.toTimeString().substr(0, 8);\r\n    if (secs > 86399)\r\n        s = Math.floor((t - Date.parse(\"1/1/70\")) / 3600000) + s.substr(2);\r\n    return s.substring(3);\r\n  }\r\n  useEffect(() => {\r\n    isPlaying\r\n        ? audioElement.current.play().then(()=>{}).catch((e)=>{audioElement.current.pause(); audioElement.current.currentTime=0;})\r\n        : audioElement.current.pause();\r\n    audioElement.current.loop = isRepeatClicked;\r\n    audioElement.current.volume = volume / 100;\r\n    audioElement.current.muted = isVolumeClicked;\r\n    audioElement.current.onloadeddata = () => {\r\n        if (audioElement.current != null)\r\n            setDuration(audioElement.current.duration)\r\n    };\r\n    setInterval(() => {\r\n        if (audioElement.current !== null)\r\n            setCurrTime(audioElement.current.currentTime);\r\n    })\r\n});\r\n\r\n// const res = await getAudioLink.get('/song', {\r\n//   params: { id: data },\r\n// });\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n    return (\r\n      <Grid container directiob=\"column\" justify=\"space-between\" alignItems=\"center\" style={{padding:'10px'}}>\r\n        <Grid container direction =\"row\" justify=\"center\" alignContent=\"center\" alignItems=\"normal\">\r\n                <Grid item xs={2}><span>{formatTime(currTime)}</span></Grid>\r\n                <Grid item xs={9}>\r\n                {\r\n                    !isNaN(seekTime) &&\r\n                    <Slider defaultValue={20} style={{width:'90%',color:\"black\"}} \r\n                            className={\"playback-completed\"}\r\n                            value={seekTime} onChange={handleSeekChange}/>\r\n                }\r\n                </Grid>\r\n                <Grid item xs={1}><span>{formatTime(duration)}</span></Grid>\r\n        </Grid>\r\n        <Grid container justify=\"space-between\" alignItems='center'>\r\n          <Grid item>\r\n            <img src='https://music.youtube.com/img/GPM_to_YTM.gif' altsrc='' width='50px'></img>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container direction=\"row\" justify=\"center\" spacing={3} alignItems=\"center\"> \r\n              <IconButton style={{height:'50px',width:'50px'}} color=\"inherit\" onClick={OnClickPreviousAudioHandler}>\r\n                <SkipPreviousIcon style={{height:'30px',width:'30px'}}/>\r\n              </IconButton>\r\n\r\n              <audio ref={audioElement} src={music1} preload={\"metadata\"}/>\r\n\r\n              <IconButton color=\"inherit\" onClick={OnClickPlayAudioHandler}>\r\n                {(!isPlaying)?<PlayCircleOn style={{height:'60px',width:'60px'}}/>:<PlayCircleOff style={{height:'60px',width:'60px'}}/>}\r\n              </IconButton>\r\n\r\n              <IconButton  style={{height:'50px',width:'50px'}}color=\"inherit\" onClick={OnClickNextAudioHandler}> \r\n                <SkipNextIcon style={{height:'30px',width:'30px'}}/>\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container direction=\"row\" justify=\"center\" spacing={3} alignItems=\"center\">\r\n                <Slider style={{width:'125px'}} color=\"inherit\" value={volume} onChange={handleVolumeChange}/>\r\n                <IconButton color=\"inherit\" onClick={handleVolume}>{(!isVolumeClicked)?<VolumeUpIcon />:<VolumeOffIcon/>}</IconButton>\r\n            </Grid>  \r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n}\r\n\r\nexport default AudioPlayer\r\n","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\Playlist\\Playlist.js",["63","64"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport React, { useEffect } from 'react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      maxWidth: 752,\r\n    },\r\n    demo: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n      margin: theme.spacing(4, 0, 2),\r\n    },\r\n  }));\r\n\r\n  // function generate(element) {\r\n  //   return props.data.musicList.map((value) =>\r\n  //     React.cloneElement(element, {\r\n  //       key: value,\r\n  //     }),\r\n  //   );\r\n  // }\r\nfunction Playlist(props) {\r\n  useEffect(()=>{\r\n    return <Playlist/>\r\n  },[])\r\n    const classes = useStyles();\r\n    const [dense, setDense] = React.useState(false);\r\n    const [secondary, setSecondary] = React.useState(false);    \r\n    return (\r\n        <div className={classes.demo}>\r\n            <List dense={dense}>\r\n              {/* {generate(\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <FolderIcon/>\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary=\"Single-line item\"\r\n                    secondary={secondary ? `${props.artist}` : null}\r\n                  />\r\n                </ListItem>,\r\n              )} */}\r\n              {\r\n                props.data.musicList.map((value)=>(\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <FolderIcon/>\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={value.snippet.title}\r\n                      secondary={secondary ? `${value.snippet.artist}` : null}\r\n                    />\r\n                  </ListItem>\r\n                ))\r\n              }\r\n            </List>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Playlist\r\n","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\SearchBar\\SearchBar.js",["65","66","67","68"],"import React, { useEffect, useState } from 'react'\r\nimport { Grid, makeStyles, TextField } from '@material-ui/core'\r\nimport _ from 'lodash';\r\nimport { getMusic } from './../../apis/Search'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport genre from '../../Assets/playlist_reducer';\r\nimport { List } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport GenreList from '../../GenreList/GenreList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '94.5vw',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    }\r\n}));\r\n\r\nfunction SearchBar(props) {\r\n    const classes = useStyles();\r\n\r\n    const [playlist_selected,setPleaylist_selected] = useState(\"\");\r\n    const [isPlaylistSelected,setIsPlayelistSelected] = useState(false);\r\n    const [search, setSearch] = useState(\"\")\r\n    const [isOpen, setisOpen] = useState(false)\r\n    const [searchResult, setSearchResult] = useState(props.data.musicList)\r\n    const [resetSearch, setresetSearch] = useState(false);\r\n\r\n    // handle Search Bar\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        (search && !resetSearch)?\r\n        getMusic({ text: search, count: 8, type: 'video' })\r\n            .then(res => {\r\n                \r\n                const data = res.data.items;\r\n                const arr = []\r\n                data.forEach(element => {\r\n                    arr.push(element);\r\n                });\r\n                setSearchResult(arr);\r\n                setisOpen(true)\r\n                console.log(searchResult);\r\n                console.log(\"genre list :\",genre);\r\n            })\r\n            .catch(err => console.log(err))\r\n        :setisOpen(false);\r\n        setresetSearch(false);\r\n    }\r\n\r\n    // Rednder All search elements\r\n    const searchResultsMapped = searchResult.map((value) => {\r\n       return ( \r\n            <ListItem>\r\n                <ListItemAvatar>\r\n                    <Avatar>\r\n                        <img src={value.snippet.thumbnails.default.url} altsrc=\"\" />\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={value.snippet.title}\r\n                />\r\n            </ListItem>\r\n    )})\r\n\r\n    // Render Selected Playlist\r\n    const playlist_mapped = _.map(playlist_selected.playlists,(val)=>{\r\n        return(\r\n            <ListItem >\r\n                <ListItemText primary={val.playlistTitle}/>\r\n            </ListItem>\r\n        )\r\n    })\r\n\r\n    // on Click function for Genre\r\n    const handleGenreSelect = (e)=>{\r\n        setPleaylist_selected(_.find(genre,{'genreTitle':e.target.innerText}));\r\n        console.log(playlist_selected);\r\n        setIsPlayelistSelected(true);\r\n    }\r\n\r\n    // on click function to go back to genre list\r\n    const closePlaylist = (e)=>{\r\n        setIsPlayelistSelected(false);\r\n        setresetSearch(true);\r\n    }\r\n\r\n    // Render All Genre\r\n    const genre_mapped = _.map(genre,(val)=>{\r\n        return(\r\n            <ListItem onClick={e=>handleGenreSelect(e)}>\r\n                <ListItemText primary={val.genreTitle}/>\r\n            </ListItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Grid container>\r\n            <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\r\n                <InputBase className={classes.input} placeholder=\"Search Song by Artist Name\" fullWidth margin=\"normal\" variant=\"outlined\" onInput={e => setSearch(e.target.value)} autoFocus/>\r\n                <IconButton  className={classes.iconButton} type=\"submit\" aria-label=\"search\">\r\n                    <SearchIcon />\r\n                </IconButton>\r\n                <IconButton  className={classes.iconButton} type=\"submit\" aria-label=\"search\">\r\n                    <ArrowBackIosIcon onClick={e=>closePlaylist(e)}/>\r\n                </IconButton>\r\n            </Paper>\r\n            {/* {(isOpen)?<Grid>{searchResultsMapped}</Grid>:(isPlaylistSelected)?<List>{playlist_mapped}</List>:<Grid item style={{position:'relative', left:'0px', top:'3px'}}><GenreList /></Grid>} */}\r\n            {(isOpen)?<Grid>{searchResultsMapped}</Grid>:(isPlaylistSelected)?<List>{playlist_mapped}</List>:<Grid item style={{position:'relative', left:'0px', top:'3px'}}><GenreList /></Grid>}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\apis\\Search.js",[],"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Assets\\playlist_reducer.js",[],"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\GenreList\\GenreList.js",[],"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\GenreList\\Grid2.js",[],{"ruleId":"69","severity":1,"message":"70","line":5,"column":32,"nodeType":"71","messageId":"72","endLine":5,"endColumn":36},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"69","severity":1,"message":"77","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":13},{"ruleId":"69","severity":1,"message":"78","line":6,"column":16,"nodeType":"71","messageId":"72","endLine":6,"endColumn":24},{"ruleId":"69","severity":1,"message":"79","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":17},{"ruleId":"69","severity":1,"message":"80","line":8,"column":8,"nodeType":"71","messageId":"72","endLine":8,"endColumn":24},{"ruleId":"69","severity":1,"message":"81","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":30},{"ruleId":"69","severity":1,"message":"82","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":16},{"ruleId":"69","severity":1,"message":"83","line":11,"column":10,"nodeType":"71","messageId":"72","endLine":11,"endColumn":20},{"ruleId":"69","severity":1,"message":"84","line":15,"column":27,"nodeType":"71","messageId":"72","endLine":15,"endColumn":41},{"ruleId":"69","severity":1,"message":"85","line":16,"column":10,"nodeType":"71","messageId":"72","endLine":16,"endColumn":23},{"ruleId":"69","severity":1,"message":"86","line":16,"column":25,"nodeType":"71","messageId":"72","endLine":16,"endColumn":39},{"ruleId":"69","severity":1,"message":"87","line":17,"column":10,"nodeType":"71","messageId":"72","endLine":17,"endColumn":23},{"ruleId":"69","severity":1,"message":"88","line":24,"column":10,"nodeType":"71","messageId":"72","endLine":24,"endColumn":22},{"ruleId":"69","severity":1,"message":"89","line":24,"column":23,"nodeType":"71","messageId":"72","endLine":24,"endColumn":38},{"ruleId":"69","severity":1,"message":"90","line":25,"column":9,"nodeType":"71","messageId":"72","endLine":25,"endColumn":16},{"ruleId":"69","severity":1,"message":"91","line":95,"column":7,"nodeType":"71","messageId":"72","endLine":95,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":140,"column":13,"nodeType":"94","endLine":140,"endColumn":92},{"ruleId":"69","severity":1,"message":"95","line":35,"column":19,"nodeType":"71","messageId":"72","endLine":35,"endColumn":27},{"ruleId":"69","severity":1,"message":"96","line":36,"column":23,"nodeType":"71","messageId":"72","endLine":36,"endColumn":35},{"ruleId":"69","severity":1,"message":"97","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"98","line":2,"column":28,"nodeType":"71","messageId":"72","endLine":2,"endColumn":37},{"ruleId":"92","severity":1,"message":"93","line":73,"column":25,"nodeType":"94","endLine":73,"endColumn":85},{"ruleId":"69","severity":1,"message":"99","line":105,"column":11,"nodeType":"71","messageId":"72","endLine":105,"endColumn":23},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'react' is defined but never used.","'useState' is defined but never used.","'GenreList' is defined but never used.","'AdvancedGridList' is defined but never used.","'PauseCircleOutlineIcon' is defined but never used.","'Button' is defined but never used.","'VolumeDown' is defined but never used.","'setRepeatClick' is assigned a value but never used.","'isPrevClicked' is assigned a value but never used.","'setPrevClicked' is assigned a value but never used.","'isNextClicked' is assigned a value but never used.","'bannerToggle' is assigned a value but never used.","'setBannerToggle' is assigned a value but never used.","'pointer' is assigned a value but never used.","'PrettoSlider' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setDense' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'genre_mapped' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]