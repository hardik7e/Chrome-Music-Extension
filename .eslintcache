[{"/home/kandhve/Projects/Chrome-Music-Extension/src/index.js":"1","/home/kandhve/Projects/Chrome-Music-Extension/src/App.js":"2","/home/kandhve/Projects/Chrome-Music-Extension/src/Components/AudioPlayer/AudioPlayer.js":"3","/home/kandhve/Projects/Chrome-Music-Extension/src/Components/SearchBar/SearchBar.js":"4","/home/kandhve/Projects/Chrome-Music-Extension/src/apis/Search.js":"5","/home/kandhve/Projects/Chrome-Music-Extension/src/Components/GenreList/GenreList.js":"6","/home/kandhve/Projects/Chrome-Music-Extension/src/Assets/playlist_reducer.js":"7","/home/kandhve/Projects/Chrome-Music-Extension/src/Components/Playlist/Playlist.js":"8"},{"size":300,"mtime":1627384880114,"results":"9","hashOfConfig":"10"},{"size":717,"mtime":1627384879630,"results":"11","hashOfConfig":"10"},{"size":6947,"mtime":1627384879734,"results":"12","hashOfConfig":"10"},{"size":5291,"mtime":1627445324325,"results":"13","hashOfConfig":"10"},{"size":1284,"mtime":1627384880114,"results":"14","hashOfConfig":"10"},{"size":2237,"mtime":1627443471763,"results":"15","hashOfConfig":"10"},{"size":14084,"mtime":1627413301786,"results":"16","hashOfConfig":"10"},{"size":2103,"mtime":1627443509809,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"6au4f8",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},"/home/kandhve/Projects/Chrome-Music-Extension/src/index.js",["39"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route>\n      <App/>\n    </Route>\n  </BrowserRouter>,\n  document.getElementById('root')\n);",["40","41"],"/home/kandhve/Projects/Chrome-Music-Extension/src/App.js",["42","43"],"import './App.css';\nimport SearchBar from './Components/SearchBar/SearchBar'\nimport { Grid } from '@material-ui/core';\nimport AudioPlayer from './Components/AudioPlayer/AudioPlayer'\nimport react from 'react'\n\n\n\nfunction App() {\n  const data = {\n    musicList:[],\n  };\n  return (\n    <div style={{minWidth:'500px',minHeight:'500px',flexGrow:'1'}}>\n      <Grid container direction=\"row\" style={{padding:'10px',height:'100vh'}} justify=\"space-between\" >\n          <Grid item style={{position:'relative', left:'0px', top:'0px'}}><SearchBar data={data}/></Grid>\n          {/* <Grid item style={{position:'absolute', left:'0px', bottom:'0px'}}><AudioPlayer/></Grid> */}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","/home/kandhve/Projects/Chrome-Music-Extension/src/Components/AudioPlayer/AudioPlayer.js",["44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],"import React, { useEffect, useRef, useState } from 'react'\nimport PlayCircleOn from '@material-ui/icons/PlayCircleOutline'\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport PlayCircleOff from '@material-ui/icons/PauseCircleOutline'\nimport { Button, Grid, IconButton, Slider, withStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext'\nimport music1 from '../../Music/vaaste.mp3'\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp'\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff'\nimport { VolumeDown } from '@material-ui/icons';\nimport { makeStyles, rgbToHex, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { convertsongMP3 } from '../../apis/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    width:325,\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 150,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nfunction AudioPlayer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  // const [{id, name, author_name, img, musicName}, setCurrTrack] = useState(music);\n  const [isRepeatClicked, setRepeatClick] = useState(false);\n  const [isPrevClicked, setPrevClicked] = useState(false);\n  const [isNextClicked, setNextClicked] = useState(false);\n  const [isPlaying, setPlayPauseClicked] = useState(false);\n  const [isVolumeClicked, setVolumeClicked] = useState(false);\n  const [volume, setVolume] = useState(50);\n  const [seekTime, setSeekTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [currTime, setCurrTime] = useState(0);\n  const [bannerToggle, setBannerToggle] = useState(false);\n  const pointer = { cursor: \"pointer\" };\n  const OnClickPlayAudioHandler = () => {\n    setPlayPauseClicked(!isPlaying)\n  }\n  const OnClickPreviousAudioHandler = () => {\n    setPlayPauseClicked(!isPlaying)\n  }\n  const OnClickNextAudioHandler = () => {\n    setPlayPauseClicked(!isPlaying)\n  }\n\n\n  const audioElement = useRef();\n  const handleSeekChange = (event, newValue) => {\n    audioElement.current.currentTime = (newValue * duration) / 100;\n    setSeekTime(newValue)\n  };\n  const handleVolumeChange = (event, newValue) => {\n    setVolume(newValue);\n  };\n\n  // useEffect(() => {\n  //   setCurrTrack(music);\n  // }, [music]);\n\n\n  useEffect(() => {\n    setSeekTime((currTime) / (duration / 100))\n  }, [currTime, duration]);\n\n\n  useEffect(() => {\n    audioElement.current.onended = () => {\n      setNextClicked(true);\n    };\n  })\n\n\n  // to set songurl\n  // useEffect(()=>{\n  //     if(props.song!=0){\n  //     convertsongMP3({id:props.song.id.videoId})\n  //     .then(res=>{setSongurl(res.data.link)})\n  //     .catch(err=>console.log(\"error in converting video to mp3: \",err))}\n  // },[isPlaying])\n\n  const handleVolume = () => {\n    setVolumeClicked(!isVolumeClicked)\n  }\n\n  function formatTime(secs) {\n    const t = new Date(1970, 0, 1);\n    t.setSeconds(secs);\n    let s = t.toTimeString().substr(0, 8);\n    if (secs > 86399)\n      s = Math.floor((t - Date.parse(\"1/1/70\")) / 3600000) + s.substr(2);\n    return s.substring(3);\n  }\n  useEffect(() => {\n    isPlaying\n      ? audioElement.current.play().then(() => { }).catch((e) => { audioElement.current.pause(); audioElement.current.currentTime = 0; })\n      : audioElement.current.pause();\n    audioElement.current.loop = isRepeatClicked;\n    audioElement.current.volume = volume / 100;\n    audioElement.current.muted = isVolumeClicked;\n    audioElement.current.onloadeddata = () => {\n      if (audioElement.current != null)\n        setDuration(audioElement.current.duration)\n    };\n    setInterval(() => {\n      if (audioElement.current !== null)\n        setCurrTime(audioElement.current.currentTime);\n    })\n  });\n\n  // const res = await getAudioLink.get('/song', {\n  //   params: { id: data },\n  // });\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\" style={{fontSize:'15px'}}>\n            {(props.song===\"\")?\"No Song Selected\":props.song.snippet.title}\n          </Typography>\n          {/* <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Mac Miller\n          </Typography> */}\n        </CardContent>\n        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\" alignItems=\"normal\">\n          <Grid item xs={2}><Paper style={{backgroundColor:'#bebebe', textAlign:'center'}}>{formatTime(currTime)}</Paper></Grid>\n          <Grid item xs={7} style={{paddingLeft:10, paddingRight:10}}>\n            {\n              !isNaN(seekTime) &&\n              <Slider defaultValue={20} style={{ width: '100%', color: \"black\" }}\n                className={\"playback-completed\"}\n                value={seekTime} onChange={handleSeekChange} />\n            }\n          </Grid>\n          <Grid item xs={2}><Paper style={{backgroundColor:'#bebebe', textAlign:'center'}}>{formatTime(duration)}</Paper></Grid>\n        </Grid>\n        <div className={classes.controls}>\n          <IconButton aria-label=\"previous\" onClick={OnClickPreviousAudioHandler}>\n            {theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon />}\n          </IconButton>\n\n          <audio ref={audioElement} src={(props.songurl==0)?'':props.songurl} preload={\"metadata\"} />\n\n          <IconButton aria-label=\"play/pause\" onClick={OnClickPlayAudioHandler}>\n            {(!isPlaying) ? <PlayCircleOn className={classes.playIcon} /> : <PlayCircleOff className={classes.playIcon} />}\n          </IconButton>\n          <IconButton aria-label=\"next\" onClick={OnClickNextAudioHandler}>\n            {theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon />}\n          </IconButton>\n        <Grid container direction=\"row\" justify=\"center\" spacing={3} alignItems=\"center\">\n          <Slider style={{ width: '100px' }} color=\"inherit\" value={volume} onChange={handleVolumeChange} />\n          <IconButton color=\"inherit\" onClick={handleVolume}>{(!isVolumeClicked) ? <VolumeUpIcon /> : <VolumeOffIcon />}</IconButton>\n        </Grid>\n        </div>\n      </div>\n      <CardMedia\n        className={classes.cover}\n        image={(props.song==0)?'https://material-ui.com/static/images/cards/live-from-space.jpg':props.song.snippet.thumbnails.high.url}\n        title=\"Live from space album cover\"\n      />\n    </Card>\n  )\n}\n\nexport default AudioPlayer\n","/home/kandhve/Projects/Chrome-Music-Extension/src/Components/SearchBar/SearchBar.js",["60","61","62","63","64","65","66"],"/home/kandhve/Projects/Chrome-Music-Extension/src/apis/Search.js",[],"/home/kandhve/Projects/Chrome-Music-Extension/src/Components/GenreList/GenreList.js",[],"/home/kandhve/Projects/Chrome-Music-Extension/src/Assets/playlist_reducer.js",[],"/home/kandhve/Projects/Chrome-Music-Extension/src/Components/Playlist/Playlist.js",["67","68","69"],"import React  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport { getMusic, getPlaylistItems } from './../../apis/Search';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport image from '../GenreList/image.jpg'\nimport _ from 'lodash';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    justifyContent : 'space-between',\n    height:250,\n    padding: '5px '\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n  divtag:{\n    display: 'flex',\n    margin: '0px',\n    padding:'3px 10px',\n    width:'100%',\n    height:30,\n    fontWeight:'bold',\n    fontSize:'20px'\n  },\n  \n  \n  \n}));\n\n \nexport default function PlayListMapped(props) {\n  const classes = useStyles();\n    \n    return (\n      <div className={classes.root}>\n  \n        <div className={classes.divtag}>\n          <IconButton  style={{ height:'40%',width:'8%'}}\n            onClick={props.ClosePlaylist}>\n            <ArrowBackIcon />\n          </IconButton> \n\n          <div>{props.SelectedPlayList.genreTitle}</div>\n        </div>\n        \n        <GridList cellHeight={72} spacing={15}  cols={3} className={classes.gridList}  >\n          {\n            props.SelectedPlayList.playlists.map(val => {\n              // cons ole.log(val.playlistId,\":\",val.playlistTitle);\n              return (\n                <GridListTile key={val.playlistId} onClick={()=>{props.handlePlaylistItem(val.playlistId)}}>\n                  <img src={image} alt={val.playlistTitle} />\n                  <GridListTileBar \n                    title={val.playlistTitle}\n                  />\n                </GridListTile>\n              )\n            })\n          }\n        </GridList>\n      </div>\n    )\n};\n",{"ruleId":"70","severity":1,"message":"71","line":5,"column":32,"nodeType":"72","messageId":"73","endLine":5,"endColumn":36},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"70","severity":1,"message":"78","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":19},{"ruleId":"70","severity":1,"message":"79","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":13},{"ruleId":"70","severity":1,"message":"80","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":30},{"ruleId":"70","severity":1,"message":"81","line":5,"column":10,"nodeType":"72","messageId":"73","endLine":5,"endColumn":16},{"ruleId":"70","severity":1,"message":"82","line":5,"column":44,"nodeType":"72","messageId":"73","endLine":5,"endColumn":54},{"ruleId":"70","severity":1,"message":"83","line":9,"column":8,"nodeType":"72","messageId":"73","endLine":9,"endColumn":14},{"ruleId":"70","severity":1,"message":"84","line":12,"column":10,"nodeType":"72","messageId":"73","endLine":12,"endColumn":20},{"ruleId":"70","severity":1,"message":"85","line":13,"column":22,"nodeType":"72","messageId":"73","endLine":13,"endColumn":30},{"ruleId":"70","severity":1,"message":"86","line":18,"column":10,"nodeType":"72","messageId":"73","endLine":18,"endColumn":24},{"ruleId":"70","severity":1,"message":"87","line":51,"column":27,"nodeType":"72","messageId":"73","endLine":51,"endColumn":41},{"ruleId":"70","severity":1,"message":"88","line":52,"column":10,"nodeType":"72","messageId":"73","endLine":52,"endColumn":23},{"ruleId":"70","severity":1,"message":"89","line":52,"column":25,"nodeType":"72","messageId":"73","endLine":52,"endColumn":39},{"ruleId":"70","severity":1,"message":"90","line":53,"column":10,"nodeType":"72","messageId":"73","endLine":53,"endColumn":23},{"ruleId":"70","severity":1,"message":"91","line":60,"column":10,"nodeType":"72","messageId":"73","endLine":60,"endColumn":22},{"ruleId":"70","severity":1,"message":"92","line":60,"column":24,"nodeType":"72","messageId":"73","endLine":60,"endColumn":39},{"ruleId":"70","severity":1,"message":"93","line":61,"column":9,"nodeType":"72","messageId":"73","endLine":61,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":167,"column":56,"nodeType":"96","messageId":"97","endLine":167,"endColumn":58},{"ruleId":"94","severity":1,"message":"95","line":183,"column":27,"nodeType":"96","messageId":"97","endLine":183,"endColumn":29},{"ruleId":"70","severity":1,"message":"98","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"99","line":2,"column":28,"nodeType":"72","messageId":"73","endLine":2,"endColumn":37},{"ruleId":"70","severity":1,"message":"100","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":9},{"ruleId":"70","severity":1,"message":"101","line":13,"column":8,"nodeType":"72","messageId":"73","endLine":13,"endColumn":13},{"ruleId":"70","severity":1,"message":"102","line":46,"column":12,"nodeType":"72","messageId":"73","endLine":46,"endColumn":24},{"ruleId":"70","severity":1,"message":"103","line":46,"column":26,"nodeType":"72","messageId":"73","endLine":46,"endColumn":41},{"ruleId":"104","severity":1,"message":"105","line":108,"column":25,"nodeType":"106","endLine":108,"endColumn":85},{"ruleId":"70","severity":1,"message":"107","line":8,"column":10,"nodeType":"72","messageId":"73","endLine":8,"endColumn":18},{"ruleId":"70","severity":1,"message":"108","line":8,"column":20,"nodeType":"72","messageId":"73","endLine":8,"endColumn":36},{"ruleId":"70","severity":1,"message":"100","line":13,"column":8,"nodeType":"72","messageId":"73","endLine":13,"endColumn":9},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'AudioPlayer' is defined but never used.","'react' is defined but never used.","'PauseCircleOutlineIcon' is defined but never used.","'Button' is defined but never used.","'withStyles' is defined but never used.","'music1' is defined but never used.","'VolumeDown' is defined but never used.","'rgbToHex' is defined but never used.","'convertsongMP3' is defined but never used.","'setRepeatClick' is assigned a value but never used.","'isPrevClicked' is assigned a value but never used.","'setPrevClicked' is assigned a value but never used.","'isNextClicked' is assigned a value but never used.","'bannerToggle' is assigned a value but never used.","'setBannerToggle' is assigned a value but never used.","'pointer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'TextField' is defined but never used.","'_' is defined but never used.","'genre' is defined but never used.","'songSelected' is assigned a value but never used.","'setsongSelected' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getMusic' is defined but never used.","'getPlaylistItems' is defined but never used.","no-global-assign","no-unsafe-negation"]
