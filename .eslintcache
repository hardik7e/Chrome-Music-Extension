[{"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\index.js":"1","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\App.js":"2","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\SearchBar\\SearchBar.js":"3","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\AudioPlayer\\AudioPlayer.js":"4","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Assets\\playlist_reducer.js":"5","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\GenreList\\GenreList.js":"6","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\apis\\Search.js":"7","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\Playlist\\Playlist.js":"8"},{"size":313,"mtime":1622392828824,"results":"9","hashOfConfig":"10"},{"size":740,"mtime":1626078607657,"results":"11","hashOfConfig":"10"},{"size":4675,"mtime":1626078972315,"results":"12","hashOfConfig":"10"},{"size":7137,"mtime":1626078607658,"results":"13","hashOfConfig":"10"},{"size":14520,"mtime":1625158659243,"results":"14","hashOfConfig":"10"},{"size":2268,"mtime":1625741337789,"results":"15","hashOfConfig":"10"},{"size":1338,"mtime":1626078607661,"results":"16","hashOfConfig":"10"},{"size":1927,"mtime":1625741890865,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1e4fbu5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\index.js",["38"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Route>\r\n      <App/>\r\n    </Route>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\App.js",["39","40"],"import './App.css';\r\nimport SearchBar from './Components/SearchBar/SearchBar'\r\nimport { Grid } from '@material-ui/core';\r\nimport AudioPlayer from './Components/AudioPlayer/AudioPlayer'\r\nimport react from 'react'\r\n\r\n\r\n\r\nfunction App() {\r\n  const data = {\r\n    musicList:[],\r\n  };\r\n  return (\r\n    <div style={{minWidth:'500px',minHeight:'500px',flexGrow:'1'}}>\r\n      <Grid container direction=\"row\" style={{padding:'10px',height:'100vh'}} justify=\"space-between\" >\r\n          <Grid item style={{position:'relative', left:'0px', top:'0px'}}><SearchBar data={data}/></Grid>\r\n          {/* <Grid item style={{position:'absolute', left:'0px', bottom:'0px'}}><AudioPlayer/></Grid> */}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\SearchBar\\SearchBar.js",["41","42","43","44","45","46","47"],"import React, { useEffect, useState } from 'react'\r\nimport { Grid, makeStyles, TextField } from '@material-ui/core'\r\nimport _ from 'lodash';\r\nimport { getMusic, getPlaylistItems } from './../../apis/Search'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport genre from '../../Assets/playlist_reducer';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport AudioPlayer from '../AudioPlayer/AudioPlayer';\r\nimport GenreList from '../GenreList/GenreList';\r\nimport { convertsongMP3 } from '../../apis/Search';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: '10px 10px 0px 10px',\r\n        padding: '2px 4px 0px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '90vw',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    }\r\n}));\r\n\r\nfunction SearchBar(props) {\r\n    const classes = useStyles();\r\n\r\n    const [search, setSearch] = useState(\"\")\r\n    const [isOpen, setisOpen] = useState(false)\r\n    const [searchResult, setSearchResult] = useState(props.data.musicList)\r\n    const [resetSearch, setresetSearch] = useState(false);\r\n    const [songSelected, setsongSelected] = useState(\"\");\r\n    const [song,setSong] = useState(\"\");\r\n    const [songurl, setSongurl] = useState(\"\");\r\n    \r\n    \r\n\r\n    // handle Search Bar\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        (search && !resetSearch)?\r\n        getMusic({ text: search, count: 8, type: 'video' })\r\n            .then(res => {\r\n                \r\n                const data = res.data.items;\r\n                const arr = []\r\n                data.forEach(element => {\r\n                    arr.push(element);\r\n                });\r\n                setSearchResult(arr);\r\n                setisOpen(true)\r\n                console.log(searchResult);\r\n                console.log(\"genre list :\",genre);\r\n            })\r\n            .catch(err => {\r\n                alert(\"Check your network connection!\")\r\n                console.log(err)})\r\n        :setisOpen(false);\r\n        setresetSearch(false);\r\n    }\r\n\r\n    // Handle Song url function\r\n    const handleSongUrl = (value) =>{\r\n        convertsongMP3({id:value.id.videoId})\r\n      .then(res=>{setSongurl(res.data.link)})\r\n      .catch(err=>console.log(\"error in converting video to mp3: \",err))\r\n    }\r\n\r\n    // Rednder All search elements\r\n    const searchResultsMapped = searchResult.map((value) => {\r\n       return ( \r\n            <ListItem onClick={()=>{setSong(value);handleSongUrl(value);}}>\r\n                <ListItemAvatar>\r\n                    <Avatar>\r\n                        <img src={value.snippet.thumbnails.default.url} altsrc=\"\" />\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={value.snippet.title}\r\n                />\r\n            </ListItem>\r\n    )})\r\n\r\n    // on click function to go back to genre list\r\n    const closePlaylist = (e)=>{\r\n        setresetSearch(true);\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Paper component=\"form\" className={classes.root} onSubmit={handleSubmit}>\r\n                <InputBase className={classes.input} placeholder=\"Search Song by Artist Name\" fullWidth margin=\"normal\" variant=\"outlined\" onInput={e => setSearch(e.target.value)} autoFocus/>\r\n                <IconButton  className={classes.iconButton} type=\"submit\" aria-label=\"search\">\r\n                    <SearchIcon />\r\n                </IconButton>\r\n                <IconButton  className={classes.iconButton} type=\"submit\" aria-label=\"search\">\r\n                    <ArrowBackIosIcon onClick={e=>closePlaylist(e)}/>\r\n                </IconButton>\r\n            </Paper>\r\n            \r\n            \r\n            {(isOpen)?\r\n                <Paper style={{maxHeight: 300,width:'100%',margin:10, overflow: 'auto'}}>{searchResultsMapped}</Paper>\r\n                :<Grid item style={{position:'relative', left:'0px', top:'3px'}}><GenreList /></Grid>}\r\n            <Grid item style={{position:'absolute', left:'0px', bottom:'0px'}}><AudioPlayer song={song} songurl={songurl}/></Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\AudioPlayer\\AudioPlayer.js",["48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport PlayCircleOn from '@material-ui/icons/PlayCircleOutline'\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport PlayCircleOff from '@material-ui/icons/PauseCircleOutline'\r\nimport { Button, Grid, IconButton, Slider, withStyles } from '@material-ui/core'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext'\r\nimport music1 from '../../Music/vaaste.mp3'\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp'\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff'\r\nimport { VolumeDown } from '@material-ui/icons';\r\nimport { makeStyles, rgbToHex, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { convertsongMP3 } from '../../apis/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    width:325,\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 150,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n\r\nfunction AudioPlayer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // const [{id, name, author_name, img, musicName}, setCurrTrack] = useState(music);\r\n  const [isRepeatClicked, setRepeatClick] = useState(false);\r\n  const [isPrevClicked, setPrevClicked] = useState(false);\r\n  const [isNextClicked, setNextClicked] = useState(false);\r\n  const [isPlaying, setPlayPauseClicked] = useState(false);\r\n  const [isVolumeClicked, setVolumeClicked] = useState(false);\r\n  const [volume, setVolume] = useState(50);\r\n  const [seekTime, setSeekTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [currTime, setCurrTime] = useState(0);\r\n  const [bannerToggle, setBannerToggle] = useState(false);\r\n  const pointer = { cursor: \"pointer\" };\r\n  const OnClickPlayAudioHandler = () => {\r\n    setPlayPauseClicked(!isPlaying)\r\n  }\r\n  const OnClickPreviousAudioHandler = () => {\r\n    setPlayPauseClicked(!isPlaying)\r\n  }\r\n  const OnClickNextAudioHandler = () => {\r\n    setPlayPauseClicked(!isPlaying)\r\n  }\r\n\r\n\r\n  const audioElement = useRef();\r\n  const handleSeekChange = (event, newValue) => {\r\n    audioElement.current.currentTime = (newValue * duration) / 100;\r\n    setSeekTime(newValue)\r\n  };\r\n  const handleVolumeChange = (event, newValue) => {\r\n    setVolume(newValue);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setCurrTrack(music);\r\n  // }, [music]);\r\n\r\n\r\n  useEffect(() => {\r\n    setSeekTime((currTime) / (duration / 100))\r\n  }, [currTime, duration]);\r\n\r\n\r\n  useEffect(() => {\r\n    audioElement.current.onended = () => {\r\n      setNextClicked(true);\r\n    };\r\n  })\r\n\r\n\r\n  // to set songurl\r\n  // useEffect(()=>{\r\n  //     if(props.song!=0){\r\n  //     convertsongMP3({id:props.song.id.videoId})\r\n  //     .then(res=>{setSongurl(res.data.link)})\r\n  //     .catch(err=>console.log(\"error in converting video to mp3: \",err))}\r\n  // },[isPlaying])\r\n\r\n  const handleVolume = () => {\r\n    setVolumeClicked(!isVolumeClicked)\r\n  }\r\n\r\n  function formatTime(secs) {\r\n    const t = new Date(1970, 0, 1);\r\n    t.setSeconds(secs);\r\n    let s = t.toTimeString().substr(0, 8);\r\n    if (secs > 86399)\r\n      s = Math.floor((t - Date.parse(\"1/1/70\")) / 3600000) + s.substr(2);\r\n    return s.substring(3);\r\n  }\r\n  useEffect(() => {\r\n    isPlaying\r\n      ? audioElement.current.play().then(() => { }).catch((e) => { audioElement.current.pause(); audioElement.current.currentTime = 0; })\r\n      : audioElement.current.pause();\r\n    audioElement.current.loop = isRepeatClicked;\r\n    audioElement.current.volume = volume / 100;\r\n    audioElement.current.muted = isVolumeClicked;\r\n    audioElement.current.onloadeddata = () => {\r\n      if (audioElement.current != null)\r\n        setDuration(audioElement.current.duration)\r\n    };\r\n    setInterval(() => {\r\n      if (audioElement.current !== null)\r\n        setCurrTime(audioElement.current.currentTime);\r\n    })\r\n  });\r\n\r\n  // const res = await getAudioLink.get('/song', {\r\n  //   params: { id: data },\r\n  // });\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h5\" variant=\"h5\" style={{fontSize:'15px'}}>\r\n            {(props.song===\"\")?\"No Song Selected\":props.song.snippet.title}\r\n          </Typography>\r\n          {/* <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            Mac Miller\r\n          </Typography> */}\r\n        </CardContent>\r\n        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\" alignItems=\"normal\">\r\n          <Grid item xs={2}><Paper style={{backgroundColor:'#bebebe', textAlign:'center'}}>{formatTime(currTime)}</Paper></Grid>\r\n          <Grid item xs={7} style={{paddingLeft:10, paddingRight:10}}>\r\n            {\r\n              !isNaN(seekTime) &&\r\n              <Slider defaultValue={20} style={{ width: '100%', color: \"black\" }}\r\n                className={\"playback-completed\"}\r\n                value={seekTime} onChange={handleSeekChange} />\r\n            }\r\n          </Grid>\r\n          <Grid item xs={2}><Paper style={{backgroundColor:'#bebebe', textAlign:'center'}}>{formatTime(duration)}</Paper></Grid>\r\n        </Grid>\r\n        <div className={classes.controls}>\r\n          <IconButton aria-label=\"previous\" onClick={OnClickPreviousAudioHandler}>\r\n            {theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon />}\r\n          </IconButton>\r\n\r\n          <audio ref={audioElement} src={(props.songurl==0)?'':props.songurl} preload={\"metadata\"} />\r\n\r\n          <IconButton aria-label=\"play/pause\" onClick={OnClickPlayAudioHandler}>\r\n            {(!isPlaying) ? <PlayCircleOn className={classes.playIcon} /> : <PlayCircleOff className={classes.playIcon} />}\r\n          </IconButton>\r\n          <IconButton aria-label=\"next\" onClick={OnClickNextAudioHandler}>\r\n            {theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon />}\r\n          </IconButton>\r\n        <Grid container direction=\"row\" justify=\"center\" spacing={3} alignItems=\"center\">\r\n          <Slider style={{ width: '100px' }} color=\"inherit\" value={volume} onChange={handleVolumeChange} />\r\n          <IconButton color=\"inherit\" onClick={handleVolume}>{(!isVolumeClicked) ? <VolumeUpIcon /> : <VolumeOffIcon />}</IconButton>\r\n        </Grid>\r\n        </div>\r\n      </div>\r\n      <CardMedia\r\n        className={classes.cover}\r\n        image={(props.song==0)?'https://material-ui.com/static/images/cards/live-from-space.jpg':props.song.snippet.thumbnails.high.url}\r\n        title=\"Live from space album cover\"\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AudioPlayer\r\n","C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Assets\\playlist_reducer.js",[],"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\GenreList\\GenreList.js",[],"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\apis\\Search.js",[],"C:\\Users\\91766\\Desktop\\HTML JS\\chrome extension\\Chrome-Music-Extension\\src\\Components\\Playlist\\Playlist.js",[],{"ruleId":"64","severity":1,"message":"65","line":5,"column":32,"nodeType":"66","messageId":"67","endLine":5,"endColumn":36},{"ruleId":"64","severity":1,"message":"68","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":19},{"ruleId":"64","severity":1,"message":"69","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":13},{"ruleId":"64","severity":1,"message":"70","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"71","line":2,"column":28,"nodeType":"66","messageId":"67","endLine":2,"endColumn":37},{"ruleId":"64","severity":1,"message":"72","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":9},{"ruleId":"64","severity":1,"message":"73","line":4,"column":20,"nodeType":"66","messageId":"67","endLine":4,"endColumn":36},{"ruleId":"64","severity":1,"message":"74","line":46,"column":12,"nodeType":"66","messageId":"67","endLine":46,"endColumn":24},{"ruleId":"64","severity":1,"message":"75","line":46,"column":26,"nodeType":"66","messageId":"67","endLine":46,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":89,"column":25,"nodeType":"78","endLine":89,"endColumn":85},{"ruleId":"64","severity":1,"message":"79","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":30},{"ruleId":"64","severity":1,"message":"80","line":5,"column":10,"nodeType":"66","messageId":"67","endLine":5,"endColumn":16},{"ruleId":"64","severity":1,"message":"81","line":5,"column":44,"nodeType":"66","messageId":"67","endLine":5,"endColumn":54},{"ruleId":"64","severity":1,"message":"82","line":9,"column":8,"nodeType":"66","messageId":"67","endLine":9,"endColumn":14},{"ruleId":"64","severity":1,"message":"83","line":12,"column":10,"nodeType":"66","messageId":"67","endLine":12,"endColumn":20},{"ruleId":"64","severity":1,"message":"84","line":13,"column":22,"nodeType":"66","messageId":"67","endLine":13,"endColumn":30},{"ruleId":"64","severity":1,"message":"85","line":18,"column":10,"nodeType":"66","messageId":"67","endLine":18,"endColumn":24},{"ruleId":"64","severity":1,"message":"86","line":51,"column":27,"nodeType":"66","messageId":"67","endLine":51,"endColumn":41},{"ruleId":"64","severity":1,"message":"87","line":52,"column":10,"nodeType":"66","messageId":"67","endLine":52,"endColumn":23},{"ruleId":"64","severity":1,"message":"88","line":52,"column":25,"nodeType":"66","messageId":"67","endLine":52,"endColumn":39},{"ruleId":"64","severity":1,"message":"89","line":53,"column":10,"nodeType":"66","messageId":"67","endLine":53,"endColumn":23},{"ruleId":"64","severity":1,"message":"90","line":60,"column":10,"nodeType":"66","messageId":"67","endLine":60,"endColumn":22},{"ruleId":"64","severity":1,"message":"91","line":60,"column":24,"nodeType":"66","messageId":"67","endLine":60,"endColumn":39},{"ruleId":"64","severity":1,"message":"92","line":61,"column":9,"nodeType":"66","messageId":"67","endLine":61,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":167,"column":56,"nodeType":"95","messageId":"96","endLine":167,"endColumn":58},{"ruleId":"93","severity":1,"message":"94","line":183,"column":27,"nodeType":"95","messageId":"96","endLine":183,"endColumn":29},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AudioPlayer' is defined but never used.","'react' is defined but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'_' is defined but never used.","'getPlaylistItems' is defined but never used.","'songSelected' is assigned a value but never used.","'setsongSelected' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PauseCircleOutlineIcon' is defined but never used.","'Button' is defined but never used.","'withStyles' is defined but never used.","'music1' is defined but never used.","'VolumeDown' is defined but never used.","'rgbToHex' is defined but never used.","'convertsongMP3' is defined but never used.","'setRepeatClick' is assigned a value but never used.","'isPrevClicked' is assigned a value but never used.","'setPrevClicked' is assigned a value but never used.","'isNextClicked' is assigned a value but never used.","'bannerToggle' is assigned a value but never used.","'setBannerToggle' is assigned a value but never used.","'pointer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]