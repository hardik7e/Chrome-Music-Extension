[{"C:\\GSSoC'21\\chrome-music-extension\\src\\index.js":"1","C:\\GSSoC'21\\chrome-music-extension\\src\\App.js":"2","C:\\GSSoC'21\\chrome-music-extension\\src\\Components\\AudioPlayer\\AudioPlayer.js":"3","C:\\GSSoC'21\\chrome-music-extension\\src\\Components\\Playlist\\Playlist.js":"4","C:\\GSSoC'21\\chrome-music-extension\\src\\Components\\SearchBar\\SearchBar.js":"5","C:\\GSSoC'21\\chrome-music-extension\\src\\apis\\Search.js":"6"},{"size":300,"mtime":1623479223034,"results":"7","hashOfConfig":"8"},{"size":882,"mtime":1623559310506,"results":"9","hashOfConfig":"8"},{"size":6255,"mtime":1623412449256,"results":"10","hashOfConfig":"8"},{"size":2252,"mtime":1623509131899,"results":"11","hashOfConfig":"8"},{"size":2770,"mtime":1623571061145,"results":"12","hashOfConfig":"8"},{"size":609,"mtime":1623479341862,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"8o8h40",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"C:\\GSSoC'21\\chrome-music-extension\\src\\index.js",["30"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route>\n      <App/>\n    </Route>\n  </BrowserRouter>,\n  document.getElementById('root')\n);",["31","32"],"C:\\GSSoC'21\\chrome-music-extension\\src\\App.js",["33","34"],"C:\\GSSoC'21\\chrome-music-extension\\src\\Components\\AudioPlayer\\AudioPlayer.js",["35","36","37","38","39","40","41","42","43","44","45","46"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport PlayCircleOn from '@material-ui/icons/PlayCircleOutline'\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport PlayCircleOff from '@material-ui/icons/PauseCircleOutline'\r\nimport { Button, Grid, IconButton, Slider, withStyles } from '@material-ui/core'\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext'\r\nimport music1 from '../../Music/vaaste.mp3'\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp'\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff'\r\nimport { VolumeDown } from '@material-ui/icons';\r\n\r\nfunction AudioPlayer({music}) {\r\n  // const [{id, name, author_name, img, musicName}, setCurrTrack] = useState(music);\r\n  const [isRepeatClicked, setRepeatClick] = useState(false);\r\n  const [isPrevClicked, setPrevClicked] = useState(false);\r\n  const [isNextClicked, setNextClicked] = useState(false);\r\n  const [isPlaying, setPlayPauseClicked] = useState(false);\r\n  const [isVolumeClicked, setVolumeClicked] = useState(false);\r\n  const [volume, setVolume] = useState(50);\r\n  const [seekTime, setSeekTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [currTime, setCurrTime] = useState(0);\r\n  const [bannerToggle,setBannerToggle] = useState(false);\r\n  const pointer = { cursor: \"pointer\"};\r\n    const OnClickPlayAudioHandler = () =>{\r\n        setPlayPauseClicked(!isPlaying)\r\n    }\r\n    const OnClickPreviousAudioHandler = () =>{\r\n        setPlayPauseClicked(!isPlaying)\r\n    }\r\n    const OnClickNextAudioHandler = () =>{\r\n        setPlayPauseClicked(!isPlaying)\r\n    }\r\n\r\n\r\n    const audioElement = useRef();\r\n    const handleSeekChange = (event, newValue) => {\r\n      audioElement.current.currentTime =(newValue*duration)/100;\r\n      setSeekTime(newValue)\r\n  };\r\n  const handleVolumeChange = (event, newValue) => {\r\n      setVolume(newValue);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setCurrTrack(music);\r\n  // }, [music]);\r\n  \r\n  \r\n  useEffect(() => {\r\n    setSeekTime((currTime) / (duration / 100))\r\n  }, [currTime, duration]);\r\n  \r\n  \r\n  \r\n  useEffect(()=>{\r\n    audioElement.current.onended = ()=> {\r\n        setNextClicked(true);\r\n    };\r\n  })\r\n\r\n  const handleVolume = () =>{\r\n    setVolumeClicked(!isVolumeClicked)\r\n  }\r\n  \r\n  function formatTime(secs) {\r\n    const t = new Date(1970, 0, 1);\r\n    t.setSeconds(secs);\r\n    let s = t.toTimeString().substr(0, 8);\r\n    if (secs > 86399)\r\n        s = Math.floor((t - Date.parse(\"1/1/70\")) / 3600000) + s.substr(2);\r\n    return s.substring(3);\r\n  }\r\n  useEffect(() => {\r\n    isPlaying\r\n        ? audioElement.current.play().then(()=>{}).catch((e)=>{audioElement.current.pause(); audioElement.current.currentTime=0;})\r\n        : audioElement.current.pause();\r\n    audioElement.current.loop = isRepeatClicked;\r\n    audioElement.current.volume = volume / 100;\r\n    audioElement.current.muted = isVolumeClicked;\r\n    audioElement.current.onloadeddata = () => {\r\n        if (audioElement.current != null)\r\n            setDuration(audioElement.current.duration)\r\n    };\r\n    setInterval(() => {\r\n        if (audioElement.current !== null)\r\n            setCurrTime(audioElement.current.currentTime);\r\n    })\r\n});\r\n\r\n// const res = await getAudioLink.get('/song', {\r\n//   params: { id: data },\r\n// });\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n    return (\r\n      <Grid container directiob=\"column\" justify=\"space-between\" alignItems=\"center\" style={{padding:'10px'}}>\r\n        <Grid container direction =\"row\" justify=\"center\" alignContent=\"center\" alignItems=\"normal\">\r\n                <Grid item xs={2}><span>{formatTime(currTime)}</span></Grid>\r\n                <Grid item xs={9}>\r\n                {\r\n                    !isNaN(seekTime) &&\r\n                    <Slider defaultValue={20} style={{width:'90%',color:\"black\"}} \r\n                            className={\"playback-completed\"}\r\n                            value={seekTime} onChange={handleSeekChange}/>\r\n                }\r\n                </Grid>\r\n                <Grid item xs={1}><span>{formatTime(duration)}</span></Grid>\r\n        </Grid>\r\n        <Grid container justify=\"space-between\" alignItems='center'>\r\n          <Grid item>\r\n            <img src='https://music.youtube.com/img/GPM_to_YTM.gif' altsrc='' width='50px'></img>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container direction=\"row\" justify=\"center\" spacing={3} alignItems=\"center\"> \r\n              <IconButton style={{height:'50px',width:'50px'}} color=\"inherit\" onClick={OnClickPreviousAudioHandler}>\r\n                <SkipPreviousIcon style={{height:'30px',width:'30px'}}/>\r\n              </IconButton>\r\n\r\n              <audio ref={audioElement} src={music1} preload={\"metadata\"}/>\r\n\r\n              <IconButton color=\"inherit\" onClick={OnClickPlayAudioHandler}>\r\n                {(!isPlaying)?<PlayCircleOn style={{height:'60px',width:'60px'}}/>:<PlayCircleOff style={{height:'60px',width:'60px'}}/>}\r\n              </IconButton>\r\n\r\n              <IconButton  style={{height:'50px',width:'50px'}}color=\"inherit\" onClick={OnClickNextAudioHandler}> \r\n                <SkipNextIcon style={{height:'30px',width:'30px'}}/>\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid container direction=\"row\" justify=\"center\" spacing={3} alignItems=\"center\">\r\n                <Slider style={{width:'125px'}} color=\"inherit\" value={volume} onChange={handleVolumeChange}/>\r\n                <IconButton color=\"inherit\" onClick={handleVolume}>{(!isVolumeClicked)?<VolumeUpIcon />:<VolumeOffIcon/>}</IconButton>\r\n            </Grid>  \r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n}\r\n\r\nexport default AudioPlayer\r\n","C:\\GSSoC'21\\chrome-music-extension\\src\\Components\\Playlist\\Playlist.js",["47","48"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport React, { useEffect } from 'react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      maxWidth: 752,\r\n    },\r\n    demo: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n      margin: theme.spacing(4, 0, 2),\r\n    },\r\n  }));\r\n\r\n  // function generate(element) {\r\n  //   return props.data.musicList.map((value) =>\r\n  //     React.cloneElement(element, {\r\n  //       key: value,\r\n  //     }),\r\n  //   );\r\n  // }\r\nfunction Playlist(props) {\r\n  useEffect(()=>{\r\n    return <Playlist/>\r\n  },[])\r\n    const classes = useStyles();\r\n    const [dense, setDense] = React.useState(false);\r\n    const [secondary, setSecondary] = React.useState(false);    \r\n    return (\r\n        <div className={classes.demo}>\r\n            <List dense={dense}>\r\n              {/* {generate(\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <FolderIcon/>\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary=\"Single-line item\"\r\n                    secondary={secondary ? `${props.artist}` : null}\r\n                  />\r\n                </ListItem>,\r\n              )} */}\r\n              {\r\n                props.data.musicList.map((value)=>(\r\n                  <ListItem>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <FolderIcon/>\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={value.snippet.title}\r\n                      secondary={secondary ? `${value.snippet.artist}` : null}\r\n                    />\r\n                  </ListItem>\r\n                ))\r\n              }\r\n            </List>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Playlist\r\n","C:\\GSSoC'21\\chrome-music-extension\\src\\Components\\SearchBar\\SearchBar.js",["49","50","51"],"C:\\GSSoC'21\\chrome-music-extension\\src\\apis\\Search.js",[],{"ruleId":"52","severity":1,"message":"53","line":5,"column":32,"nodeType":"54","messageId":"55","endLine":5,"endColumn":36},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"60","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":13},{"ruleId":"52","severity":1,"message":"61","line":6,"column":16,"nodeType":"54","messageId":"55","endLine":6,"endColumn":24},{"ruleId":"52","severity":1,"message":"62","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":30},{"ruleId":"52","severity":1,"message":"63","line":5,"column":10,"nodeType":"54","messageId":"55","endLine":5,"endColumn":16},{"ruleId":"52","severity":1,"message":"64","line":11,"column":10,"nodeType":"54","messageId":"55","endLine":11,"endColumn":20},{"ruleId":"52","severity":1,"message":"65","line":15,"column":27,"nodeType":"54","messageId":"55","endLine":15,"endColumn":41},{"ruleId":"52","severity":1,"message":"66","line":16,"column":10,"nodeType":"54","messageId":"55","endLine":16,"endColumn":23},{"ruleId":"52","severity":1,"message":"67","line":16,"column":25,"nodeType":"54","messageId":"55","endLine":16,"endColumn":39},{"ruleId":"52","severity":1,"message":"68","line":17,"column":10,"nodeType":"54","messageId":"55","endLine":17,"endColumn":23},{"ruleId":"52","severity":1,"message":"69","line":24,"column":10,"nodeType":"54","messageId":"55","endLine":24,"endColumn":22},{"ruleId":"52","severity":1,"message":"70","line":24,"column":23,"nodeType":"54","messageId":"55","endLine":24,"endColumn":38},{"ruleId":"52","severity":1,"message":"71","line":25,"column":9,"nodeType":"54","messageId":"55","endLine":25,"endColumn":16},{"ruleId":"52","severity":1,"message":"72","line":95,"column":7,"nodeType":"54","messageId":"55","endLine":95,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":140,"column":13,"nodeType":"75","endLine":140,"endColumn":92},{"ruleId":"52","severity":1,"message":"76","line":35,"column":19,"nodeType":"54","messageId":"55","endLine":35,"endColumn":27},{"ruleId":"52","severity":1,"message":"77","line":36,"column":23,"nodeType":"54","messageId":"55","endLine":36,"endColumn":35},{"ruleId":"52","severity":1,"message":"78","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"79","line":2,"column":28,"nodeType":"54","messageId":"55","endLine":2,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":58,"column":25,"nodeType":"75","endLine":58,"endColumn":85},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'react' is defined but never used.","'useState' is defined but never used.","'PauseCircleOutlineIcon' is defined but never used.","'Button' is defined but never used.","'VolumeDown' is defined but never used.","'setRepeatClick' is assigned a value but never used.","'isPrevClicked' is assigned a value but never used.","'setPrevClicked' is assigned a value but never used.","'isNextClicked' is assigned a value but never used.","'bannerToggle' is assigned a value but never used.","'setBannerToggle' is assigned a value but never used.","'pointer' is assigned a value but never used.","'PrettoSlider' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setDense' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]